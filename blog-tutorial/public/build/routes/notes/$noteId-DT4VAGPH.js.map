{
  "version": 3,
  "sources": ["../../../../app/routes/notes/$noteId.jsx"],
  "sourcesContent": ["import { json, redirect } from \"@remix-run/node\";\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport { deleteNote, getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nexport async function loader({ request, params }) {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ userId, id: params.noteId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json({ note });\n}\n\nexport async function action({ request, params }) {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ userId, id: params.noteId });\n\n  return redirect(\"/notes\");\n}\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData();\n\n  return (\n    <div>\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <p className=\"py-6\">{data.note.body}</p>\n      <hr className=\"my-4\" />\n      <Form method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAIA,kBAAoC;AACpC,qBAA8B;AAL9B;AA2Be,SAAR,kBAAmC;AACxC,QAAM,OAAO,cAAc;AAE3B,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC;AAAA,QAAG,WAAU;AAAA,QAAsB,eAAK,KAAK;AAAA,SAA9C;AAAA;AAAA;AAAA;AAAA,aAAoD;AAAA,MACpD,mDAAC;AAAA,QAAE,WAAU;AAAA,QAAQ,eAAK,KAAK;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA,MACpC,mDAAC;AAAA,QAAG,WAAU;AAAA,SAAd;AAAA;AAAA;AAAA;AAAA,aAAqB;AAAA,MACrB,mDAAC;AAAA,QAAK,QAAO;AAAA,QACX,6DAAC;AAAA,UACC,MAAK;AAAA,UACL,WAAU;AAAA,UACX;AAAA,WAHD;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA;AAAA,KAXF;AAAA;AAAA;AAAA;AAAA,SAYA;AAEJ;AAEO,SAAS,cAAc,EAAE,MAAM,GAAG;AACvC,UAAQ,MAAM,KAAK;AAEnB,SAAO,mDAAC;AAAA,IAAI;AAAA;AAAA,MAA+B,MAAM;AAAA;AAAA,KAA1C;AAAA;AAAA;AAAA;AAAA,SAAkD;AAC3D;AAEO,SAAS,gBAAgB;AAC9B,QAAM,SAAS,SAAS;AAExB,MAAI,OAAO,WAAW,KAAK;AACzB,WAAO,mDAAC;AAAA,MAAI;AAAA,OAAL;AAAA;AAAA;AAAA;AAAA,WAAmB;AAAA,EAC5B;AAEA,QAAM,IAAI,MAAM,2CAA2C,OAAO,QAAQ;AAC5E;",
  "names": []
}
