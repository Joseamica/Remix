{
  "version": 3,
  "sources": ["../../../app/routes/join.jsx"],
  "sourcesContent": ["import { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport async function loader({ request }) {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n}\n\nexport async function action({ request }) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json(\n      {\n        errors: {\n          email: \"A user already exists with this email\",\n          password: null,\n        },\n      },\n\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n}\n\nexport const meta = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData();\n  const emailRef = React.useRef(null);\n  const passwordRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": ["_a", "_b", "_c", "_d"]
}
